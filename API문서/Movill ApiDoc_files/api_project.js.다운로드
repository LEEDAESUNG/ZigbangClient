define({
  "name": "Movill Smart Parking API",
  "version": "0.2.0",
  "description": "Documentation for the REST api access provided at AcmeCorp",
  "title": "Movill ApiDoc",
  "url": "https://{movill-server-domain}:{port}",
  "header": {
    "title": "Introduction",
    "content": "<p><img src=\"./img/movill_logo.png\" alt=\"movill\"> <font size=\"6\" style=\"vertical-align: bottom;\">Movill external vendor integration API document!</font></p>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization\">Authorization</a></h3>\n<blockquote>\n<p>Admin user access only.<br>\nThis optional description belong to the group admin.</p>\n</blockquote>\n<ul>\n<li>OpenAPI OAuth2 endpoint\n<ul>\n<li>개발 : https://dev-openapi.themovill.com/facility/parking/oauth2/token</li>\n<li>운영 : https://openapi.themovill.com/facility/parking/oauth2/token</li>\n</ul>\n</li>\n</ul>\n<h3></h3>\n<ul>\n<li>키 발급 종류(모빌 측에서 전달)\n<ul>\n<li>client_id</li>\n<li>client_secret</li>\n</ul>\n</li>\n</ul>\n<h3></h3>\n<ul>\n<li>액세스 토큰 가져오기 (cURL)<pre class=\"prettyprint\">curl --location --request POST 'https://openapi.themovill.com/facility/parking/oauth2/token' \\\n--header 'Authorization: Basic YjFwazFHTEZrMnlKMjY5SkN1aVI0YndYenc1MXJKcnc6cEE3RWl3U2tQZmZnR0N1MzAxUmpBUjN4aW1kYm1SbFM=' \\ \n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'grant_type=client_credentials' \\\n--data-urlencode 'client_id=b1pk1GLFk2yJ269JCuiR4bwXzw51rJrw'\n</code></pre>\n</li>\n</ul>\n<h3></h3>\n<ul>\n<li>응답값<pre class=\"prettyprint\">{\n    \"token_type\": \"bearer\",\n    \"access_token\": \"lEDW0pV9Grcjsoxkho9pevIQHHjvRNoU\", \"expires_in\": 7200\n}\n</code></pre>\n<ul>\n<li>token_type : 토큰타입</li>\n<li>access_token : 엑세스 토큰 (API 호출시 사용)</li>\n<li>expires_in : 만료 시간 (초)</li>\n</ul>\n</li>\n</ul>\n<h3></h3>\n<ul>\n<li>토큰발급 JAVA 샘플코드<pre class=\"prettyprint\">public static String getToken(String clientId, String secretKey) throws IOException, InterruptedException, ParseException {\n    try {\n        // HTTP 요청을 위한 URL 오브젝트 생성\n        String tokenUrl = \"https://openapi.themovill.com/facility/parking/oauth2/token\";\n        URL url = new URL(tokenUrl);\n\n        // Oauth2.0 (client_credentials)\n        String POST_PARAMS = \"grant_type=client_credentials&scope=read\";\n        HttpURLConnection con = (HttpURLConnection) url.openConnection();\n        con.setRequestMethod(\"POST\");\n        con.setRequestProperty(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_FORM_URLENCODED_VALUE);\n\n        // 클라이언트아이디, 시크릿코드 Base64 인코딩\n        String auth = clientId + \":\" + secretKey;\n        byte[] authEncBytes = Base64.encodeBase64(auth.getBytes());\n        String authStringEnc = new String(authEncBytes);\n        String authHeader = \"Basic \" + authStringEnc;\n        System.out.println(\"Authorization : \" + authHeader);\n        con.setRequestProperty(\"Authorization\", authHeader);\n        con.setDoOutput(true);\n\n        // 리퀘스트 바디 전송\n        OutputStream os = con.getOutputStream();\n        os.write(POST_PARAMS.getBytes());\n        os.flush();\n        os.close();\n\n        // 응답코드확인\n        int responseCode = con.getResponseCode();\n        System.out.println(\"POST Response Code : \" + responseCode + \" message ::\" + con.getResponseMessage());\n\n        BufferedReader br;\n        \n        // 정상응답\n        if (responseCode == HttpURLConnection.HTTP_OK) {\n            br = new BufferedReader(new InputStreamReader(con.getInputStream()));\n        } else { // 에러발생\n            System.out.println(\"POST request not worked\");\n            br = new BufferedReader(new InputStreamReader(con.getErrorStream()));\n        }\n        \n        // 응답바디 read\n        String inputLine;\n        StringBuffer response = new StringBuffer();\n        while ((inputLine = br.readLine()) != null) {\n            response.append(inputLine);\n        }\n        br.close();\n        \n        // 응답문자열확인\n        System.out.println(\"RESPONSE_STRING : \" + URLDecoder.decode(response.toString(), \"UTF-8\"));\n        \n        // 응답문자열 인코딩, JSONObject 변환\n        JSONParser parser = new JSONParser();\n        Object obj = parser.parse(URLDecoder.decode(response.toString(), \"UTF-8\"));\n        JSONObject tokenJson = (JSONObject) obj;\n        \n        // 토큰확인\n        System.out.println(\"access_token : \" + new ObjectMapper().writerWithDefaultPrettyPrinter().writeValueAsString(tokenJs\n                \n        // 토큰변환\n        return tokenJson.get(\"access_token\").toString();\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n\n    return null;\n}\n</code></pre>\n</li>\n</ul>\n<h3></h3>\n<ul>\n<li>API 요청(cURL)<pre class=\"prettyprint\">curl --location --request POST 'openapi.themovill.com/facility/parking/v2/car-manager/LPR/in/car/info' \\ \n--header 'Authorization: bearer lEDW0pV9Grcjsoxkho9pevIQHHjvRNoU' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n  \"apt_idx\": 1, \n  \"car_number\": \"155 4422\", \n  \"in_date\": 1594952526000\n}'\n</code></pre>\n</li>\n</ul>\n<h3></h3>\n<ul>\n<li>토큰 만료 시 HTTP Status Code (401 Unauthorized)<pre class=\"prettyprint\">{\n  \"error_description\": \"The access token is invalid or has expired\", \"error\": \"invalid_token\"\n}\n</code></pre>\n</li>\n</ul>\n<h3>HTTP STATUS CODE</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><center>CODE</center></th>\n<th style=\"text-align:left\"><center>Message</center></th>\n<th style=\"text-align:left\"><center>Detail Message</center></th>\n<th style=\"text-align:center\"><center>HTTP</center></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>200</strong></td>\n<td style=\"text-align:left\">SUCCESS</td>\n<td style=\"text-align:left\">성공</td>\n<td style=\"text-align:center\"><em>200</em></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>400</strong></td>\n<td style=\"text-align:left\">Invalid parameters</td>\n<td style=\"text-align:left\">올바르지 않은 파라미터입니다.</td>\n<td style=\"text-align:center\"><em>400</em></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>401</strong></td>\n<td style=\"text-align:left\">Unauthenticated, invalid token</td>\n<td style=\"text-align:left\">인증되지 않았습니다. 토큰을 확인하세요.</td>\n<td style=\"text-align:center\"><em>401</em></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>403</strong></td>\n<td style=\"text-align:left\">Unauthorized, invalid token</td>\n<td style=\"text-align:left\">권한이 없습니다. 토큰을 확인하세요.</td>\n<td style=\"text-align:center\"><em>403</em></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>404</strong></td>\n<td style=\"text-align:left\">Not Found</td>\n<td style=\"text-align:left\">페이지를 찾을 수 없습니다.</td>\n<td style=\"text-align:center\"><em>404</em></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>405</strong></td>\n<td style=\"text-align:left\">Requested method is not supported</td>\n<td style=\"text-align:left\">지원하지 않는 http 메소드 입니다.</td>\n<td style=\"text-align:center\"><em>405</em></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>500</strong></td>\n<td style=\"text-align:left\">Internal Server Error</td>\n<td style=\"text-align:left\">서버에서 에러가 발생했습니다.</td>\n<td style=\"text-align:center\"><em>500</em></td>\n</tr>\n</tbody>\n</table>\n"
  },
  "footer": {
    "title": "Responsibility",
    "content": "<h2>Zigbang</h2>\n<ul>\n<li>Suggestions, contact, support and error reporting on <a href=\"daniel@zigbang.com\">Email : daniel@zigbang.com</a></li>\n<li>Last update 2021.03.05</li>\n</ul>\n"
  },
  "template": {
    "withCompare": true,
    "withGenerator": true
  },
  "sampleUrl": false,
  "defaultVersion": "0.0.0",
  "apidoc": "0.3.0",
  "generator": {
    "name": "apidoc",
    "time": "2021-05-06T07:55:54.289Z",
    "url": "https://apidocjs.com",
    "version": "0.27.1"
  }
});
